scr__
toc__






















































































Table of Contents {{{1
_______________________________________________________________________section_
table_of_contents
____Approximate_middle_of_table_of_contents
toc__  Table of Contents
toca__ Table of Contents Archive

directories_list
line_measurement_guide
____Approximate_middle_of_table_of_contents
vim_section
wiki_translator_section

table_of_contents END
____________________________________________________________________endsection_





























vim {{{1
_______________________________________________________________________section_
vim_section
HIGH {{{2
- +                  line up, down on first non-blank character
B W                  space-separated word left, right
gE E                 end of space-separated word left, right
{ }                  beginning of previous, next paragraph
^                    first nonspace character of line
C                    change to the end of line
<m >m                shift left, right text of movement m
n<< n>>              shift n lines left, right
n^A n^X              +n, -n to number under cursor
gv                   start highlighting on previous visual area
aw as ap             select a word, a sentence, a paragraph (VISUAL MODE)
^R                   redo last undo
fc Fc                next, previous occurence of character c
tc Tc                before next, previous occurence of c
; ,                  repeat last fFtT, in opposite direction
[( ])                unclosed (, ) backward, forward
[{ ]}                unclosed {, } backward, forward
g# g*                same, but also find partial matches
ÃÂÃÂ ÃÂ"       go to position before jump, at last edit
ÃÂ[ ÃÂ]          go to start, end of previously operated text
^E ^Y                scroll line up, down
^D ^U                scroll half a page up, down
^F ^B                scroll page up, down
zt or z              set current line at top of window
zz or z.             set current line at center of window
zb or z-             set current line at bottom of window
ex commands can be recalled like shell history with up and down arrows
MEDIUM {{{2
0 gm                 beginning, middle of line
nG ngg               line n, default the last, first
n|                   column n of current line
!mc                  filter lines of movement m through command c
u U                  undo last command, restore last changed line
g0                   beginning of screen line
g^ g$                first, last character of screen line
gk gj                screen line up, down
# *                  search backward, forward for word under cursor
LOW {{{2
i a                  insert before, after cursor
I A                  insert at beginning, end of line
gI                   insert text in first column
s                    change one character and insert
gum gUm              lowercase, uppercase text of movement m
X                    delete character before cursor
:rd                  delete range r lines
:rdx                 delete range r lines into register x
^Vc ^Vn              insert char c literally, decimal value n (insert mode)
^A                   insert previously inserted text
^@                   same as ^A and stop insert ? command mode
^Rx ^R^Rx            insert content of register x, literally
^W                   delete word before cursor
^Oc                  execute c in temporary command mode
:reg                 show the content of all registers
gp gP                like p, P leaving cursor after new text
gqm                  format lines of movement m to fixed width
:rle i               left align lines in range r with indent i
v V ^V               start/stop highlighting characters, lines, block
o                    exchange cursor position with start of highlighting (VISUAL MODE)
qc qC                record, append typed characters in register c
@@                   repeat previous @ command
:@c                  execute register c as an Ex command
:rg/p/c              execute Ex command c on range r b where pattern p matches
c                    confirm changes (SEARCH AND REPLACE)
:rs x                repeat substitution with new r & x
\< \>                start, end of word
ÃÂ0..9             go to last exit position
:marks               print the active marks list
:jumps               print the jump list
:map c e             map c to e in normal & visual mode
:map! c e            map c to e in insert & cmd-line mode
:unmap c :unmap! c   remove mapping c
:mk f                write current mappings, settings... to file f
:ab c e              add abbreviation for c to e
:ab c                show abbreviations starting with c
:una c               remove abbreviation c
^Ws or :split        split window in two
^Wn or :new?-        create new empty window
^Wo or :on?-         make current window one on screen
^Wj ^Wk              move to window below, above
^Ww ^W^W             move to window below, above (wrap)
:n :N                edit next, previous file in list
:r! c                insert output of command c below cursor
zfm                  create fold of movement m
:rfo                 create fold for range r
zd zE                delete fold at cursor, all in window
zo zc zO zC          open, close one fold; recursively
[z ]z                move to start, end of current open fold
zj zk                move down, up to start, end of next fold
:sh :!c              start shell, execute command c in shell
K                    lookup keyword under cursor with man
:make                start make, read errors and jump to first
:cn :cp              display the next, previous error
g^G                  show cursor column, line, and character position
ga                   show ASCII value of character under cursor
gf                   open file which filename is under cursor
b w                  word/token left, right
ge e                 end of word/token left, right
Special characters in search patterns
\s \S                a white space, a non-white space
\= * \+              match 0..1, 0..8, 1..8 of preceding atoms
\|                   separate two branches (= or)
\( \)                group patterns into an atom
\& \n                the whole matched pattern, nth() group
\u \l                next character made upper, lowercase
\c \C                ignore, match case on next pattern
LOOKUP Offsets in search commands
       Tags
vim_section END
____________________________________________________________________endsection_






























line measurement {{{1
_______________________________________________________________________section_
line_measurement_guide
----------------------------------79-------------------------------------------
----------------------------------------------------------------140-------------------------------------------------------------------------
line_measurement_guide END
____________________________________________________________________endsection_






























directories {{{1
_______________________________________________________________________section_
directories_list
A
B
C   C:\
D   docs (which should be pointed to by My Documents)
E
F
G
H
I
J   RESERVED
K   Desktop
L
M   MMNTS
N
O   Dropbox
P   Project, current
Q
R   Program Files
S   shared
T   TuSC
U
V
W   Downloads
X   Program Files (x86)
Y   Cygwin home
Z
directories_list END
____________________________________________________________________endsection_






























scratch {{{1
_______________________________________________________________________section_
scratch_section scr__





























scratch_section END
____________________________________________________________________endsection_

































wiki_translator {{{1
_______________________________________________________________________section_
wiki_translator_section
I created my own page (tho public) at:
https://svn.omniti.com/trac/taubman/wiki/DavidBradfordDocs
GOAL: I want to be able to write documentation in a simple, easily readable
text format that can be easily converted to the Trac wiki, or HTML, or PDF. If
the HTML looks good, I can print to PDF with Nitro.
Requirements:
1. Easy to read and write for humans
2. Convert to HTML nicely
3. Allows tables
Q: Why not just use Trac?
A: Maybe the same or similar markup but I want to be able to use it for my own
stuff too
OmniTI uses Trac Wiki.
From the Trac documentation: ( http://trac.edgewall.org/wiki/WikiFormatting )
This wiki engine implements an ever growing subset of the commands from other popular Wikis, especially ?MoinMoin and WikiCreole.
wiki_translator_section END
____________________________________________________________________endsection_


